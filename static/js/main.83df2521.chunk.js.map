{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","expression","setexpression","oldexpression","setoldexpression","prev","setprev","numerics","Set","operators","Button","evaluateExpression","evaluation","eval","putNumerics","value","putDelete","slice","putOperators","HandleKeyUp","event","console","log","key","has","className","tabIndex","onKeyUp","style","width","background","height","display","flexDirection","justifyContent","alignItems","padding","borderRadius","margin","flexWrap","map","Buttonvalue","idx","onClick","color","border","textalign","textdecoration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uyBAKA,SAASA,MAEP,cAAkCC,oDAAS,IAA3C,2JAAKC,WAAL,cAAiBC,cAAjB,cACA,WAAwCF,oDAAS,IAAjD,4JAAKG,cAAL,cAAoBC,iBAApB,cACA,WAAsBJ,oDAAS,OAA/B,4JAAKK,KAAL,cAAWC,QAAX,cACIC,SAAW,IAAIC,IAAI,eACnBC,UAAY,IAAID,IAAI,SACpBE,OAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEzGC,mBAAqB,SAArBA,qBACF,IAAIC,WAAaC,KAAKZ,YACtBC,cAAcU,YACdR,iBAAiBH,YACjBK,QAAQ,QAINQ,YAAc,SAASC,GAEvBb,cADS,OAARG,KACaU,EAEAd,WAAac,GAE7BT,QAAQ,QAGNU,UAAY,WAEF,QAATX,KACDH,cAAc,KAEdA,cAAcD,WAAWgB,MAAM,GAAI,IACnCX,QAAQ,SAIRY,aAAe,SAASH,GACf,MAARV,KAEDH,cAAcD,WAAac,GACX,OAATV,MAEPH,cAAcD,WAAWgB,MAAM,GAAG,GAAKF,GAEzCT,QAAQ,OAKNa,YAAc,SAAUC,GAC1BC,QAAQC,IAAIF,EAAMG,KACA,cAAdH,EAAMG,IACRP,YAEOT,SAASiB,IAAIJ,EAAMG,KAC1BT,YAAYM,EAAMG,KAEXd,UAAUe,IAAIJ,EAAMG,KAC3BL,aAAaE,EAAMG,KAEE,UAAdH,EAAMG,KACbZ,sBAGJ,OACE,mEACEc,UAAU,MACVC,SAAU,EACVC,QAASR,YACTS,MAAO,CACLC,MAAO,OACPC,WAAY,WACZC,OAAQ,SACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAXhB,UAcE,kGACA,mEACEP,MAAO,CACLC,MAAO,QACPC,WAAY,UACZC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfE,WAAY,WACZD,eAAgB,SAChBE,QAAS,OACTC,aAAc,QAVlB,UAcE,0EAAKlC,gBACL,0EAAKF,gBAEP,mEACE2B,MAAO,CACLC,MAAO,QACPS,OAAQ,OACRR,WAAY,UACZC,OAAQ,QACRC,QAAS,OACTC,cAAe,MACfE,WAAY,WACZD,eAAgB,SAChBE,QAAS,OACTC,aAAc,OACdE,SAAU,QAZd,UAeG7B,OAAO8B,KAAI,SAAUC,EAAaC,GACjC,OAAO,qEAAQjB,UAAU,MACzBkB,QAAW,WACW,MAAhBF,EACF9B,qBACyB,MAAhB8B,EACTzB,YACOT,SAASiB,IAAIiB,GACpB3B,YAAY2B,GACLhC,UAAUe,IAAIiB,IACrBvB,aAAauB,IAIjBb,MACE,CACEE,WAAY,UACZc,MAAO,UACPC,OAAQ,OACRhB,MAAO,QACPO,QAAS,OACTU,UAAW,SACXC,eAAgB,OAChBT,OAAS,OACTD,aAAe,OAvBZ,SA0BNI,OAGH,wGAMO1C,2B,gIC7IAiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5D,EAAA,EAAD,MAEF6D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83df2521.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  let [expression, setexpression] = useState(\"\");\r\n  let [oldexpression, setoldexpression] = useState(\"\");\r\n  let [prev, setprev] = useState(\"ANS\");\r\n  let numerics = new Set(\"0123456789.\");\r\n  let operators = new Set(\"+-*/%\");\r\n  let Button = [\"(\", \")\", \"%\", \"C\", \"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"];\r\n\r\n  let evaluateExpression = function () {\r\n    let evaluation = eval(expression)\r\n    setexpression(evaluation);\r\n    setoldexpression(expression);\r\n    setprev(\"ANS\");\r\n  }\r\n\r\n\r\n  let putNumerics = function(value){\r\n    if(prev == \"ANS\"){\r\n      setexpression(value);\r\n    }else{\r\n      setexpression(expression + value);\r\n    }\r\n    setprev(\"NUM\");\r\n  }\r\n\r\n  let putDelete = function()\r\n  {\r\n    if(prev === \"ANS\"){\r\n      setexpression(\"\")\r\n    }else{\r\n      setexpression(expression.slice(0, -1));\r\n      setprev(\"DEL\");\r\n    }\r\n  }\r\n\r\n  let putOperators = function(value){\r\n    if(prev != \"OP\")\r\n    {\r\n      setexpression(expression + value);\r\n    }else if(prev === \"OP\")\r\n    {\r\n      setexpression(expression.slice(0,-1) + value)\r\n    }\r\n    setprev(\"OP\");\r\n  }\r\n\r\n  \r\n\r\n  let HandleKeyUp = function (event) {\r\n    console.log(event.key);\r\n    if (event.key === \"Backspace\") {\r\n      putDelete();\r\n    }\r\n    else if (numerics.has(event.key)) {\r\n      putNumerics(event.key);\r\n    }\r\n    else if (operators.has(event.key)) {\r\n      putOperators(event.key);\r\n    }\r\n    else if (event.key === \"Enter\") {\r\n      evaluateExpression();\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      tabIndex={0}\r\n      onKeyUp={HandleKeyUp}\r\n      style={{\r\n        width: \"100%\",\r\n        background: \"#FADBD8 \",\r\n        height: \"1000px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <h1>Calculator In React</h1>\r\n      <div\r\n        style={{\r\n          width: \"320px\",\r\n          background: \"#ff6347\",\r\n          height: \"100px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n          justifyContent: \"center\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\"\r\n        }}\r\n\r\n      >\r\n        <h4>{oldexpression}</h4>\r\n        <h1>{expression}</h1>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"320px\",\r\n          margin: \"20px\",\r\n          background: \"#ff6347\",\r\n          height: \"420px\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"flex-end\",\r\n          justifyContent: \"center\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Button.map(function (Buttonvalue, idx){\r\n          return <button className=\"btn\"\r\n          onClick = {function () {\r\n            if (Buttonvalue === \"=\") {\r\n              evaluateExpression();\r\n            } else if (Buttonvalue === \"C\") {\r\n              putDelete();\r\n            }else if(numerics.has(Buttonvalue)){\r\n              putNumerics(Buttonvalue);\r\n            }else if(operators.has(Buttonvalue)){\r\n              putOperators(Buttonvalue);\r\n            }\r\n            \r\n          }}\r\n          style={\r\n            {\r\n              background: \"#000000\",\r\n              color: \"#ffffff\",\r\n              border: \"none\",\r\n              width :\"18.5%\",\r\n              padding: \"25px\",\r\n              textalign: \"center\",\r\n              textdecoration: \"none\",\r\n              margin : \"10px\",\r\n              borderRadius : \"5px\",\r\n            }\r\n          }\r\n         >{Buttonvalue}</button>\r\n        })}\r\n\r\n        <h3>@Develop By igDfuse</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}